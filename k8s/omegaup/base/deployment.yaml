apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: nginx
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app.kubernetes.io/name: frontend
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frontend
        app.kubernetes.io/part-of: frontend
        app.kubernetes.io/component: omegaup-frontend
    spec:
      containers:
      - name: php
        image: omegaup/php
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 64Mi
        volumeMounts:
        - name: frontend-secret
          mountPath: /etc/omegaup/frontend
        - name: omegaup-secret
          mountPath: /opt/omegaup/frontend/server/config.php
          subPath: config.php
        - name: php-config
          mountPath: /etc/php/7.4/fpm/php-fpm.conf
          subPath: php-fpm.conf
        - name: omegaup
          mountPath: /opt/omegaup
        - name: varlog
          mountPath: /var/log
        - name: runphp
          mountPath: /run/php
      - name: nginx
        image: omegaup/nginx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        - name: liveness-port
          containerPort: 8090
        readinessProbe:
          httpGet:
            path: /stub_status
            port: liveness-port
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /stub_status
            port: liveness-port
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx
        - name: omegaup
          mountPath: /opt/omegaup
        - name: varlog
          mountPath: /var/log
        - name: runphp
          mountPath: /run/php
      - name: fluent-bit
        image: fluent/fluent-bit:1.8
        command: ['/fluent-bit/bin/fluent-bit', '--quiet', '-c', '/fluent-bit/etc/fluent-bit.conf']
        volumeMounts:
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc/
        - name: varlog
          mountPath: /var/log
      initContainers:
      - name: init-varlog
        image: busybox:1.28
        command: ['sh', '-c', 'touch /var/log/frontend.log /var/log/nginx.access.log /var/log/nginx.error.log']
        securityContext:
          runAsUser: 1000
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: varlog
          mountPath: /var/log
      - name: init-volume
        image: omegaup/frontend
        imagePullPolicy: IfNotPresent
        command: ['rsync', '-az', '/opt/omegaup/', '/mnt/omegaup/']
        volumeMounts:
        - name: omegaup
          mountPath: /mnt/omegaup
      volumes:
      - name: frontend-secret
        secret:
          secretName: frontend-secret
      - name: omegaup-secret
        secret:
          secretName: omegaup-secret
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: php-config
        configMap:
          name: php-config
      - name: fluent-bit-config
        configMap:
          name: fluent-bit-config
      - name: varlog
        emptyDir: {}
      - name: omegaup
        emptyDir: {}
      - name: runphp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app.kubernetes.io/name: frontend
  annotations:
    prometheus.io/port: '8000'
    prometheus.io/scrape: 'true'
spec:
  selector:
    app.kubernetes.io/name: frontend
  ports:
  - name: http
    protocol: TCP
    port: 8000
    targetPort: 8000
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 60
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: omegaup.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 8000
