apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  resources:
    requests:
      storage: 256Mi
  accessModes:
  - ReadWriteOnce
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app.kubernetes.io/name: redis
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: redis
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: redis
        imagePullPolicy: IfNotPresent
        command: ['redis-server', '/etc/redis/redis.conf']
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 128Mi
        volumeMounts:
        - name: redis-secret
          mountPath: /etc/redis
        - name: redis-persistent-storage
          mountPath: /data
      volumes:
      - name: redis-persistent-storage
        persistentVolumeClaim:
          claimName: redis-pvc
      - name: redis-secret
        secret:
          secretName: redis-secret
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app.kubernetes.io/name: redis
  annotations:
    prometheus.io/port: '8000'
    prometheus.io/scrape: 'true'
spec:
  selector:
    app.kubernetes.io/name: redis
  ports:
  - name: redis
    protocol: TCP
    port: 6379
    targetPort: 6379
  sessionAffinity: ClientIP
